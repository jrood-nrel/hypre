/******************************************************************************
 * Copyright (c) 1998 Lawrence Livermore National Security, LLC and other
 * HYPRE Project Developers. See the top-level COPYRIGHT file for details.
 *
 * SPDX-License-Identifier: (Apache-2.0 OR MIT)
 ******************************************************************************/

#define NALU_HYPRE_RELEASE_NAME    "@CMAKE_PROJECT_NAME@"
#define NALU_HYPRE_RELEASE_VERSION "@NALU_HYPRE_VERSION@"
#define NALU_HYPRE_RELEASE_NUMBER  @NALU_HYPRE_NUMBER@
#define NALU_HYPRE_RELEASE_DATE    "@NALU_HYPRE_DATE@"
#define NALU_HYPRE_RELEASE_TIME    "@NALU_HYPRE_TIME@"
#define NALU_HYPRE_RELEASE_BUGS    "@NALU_HYPRE_BUGS@"

#cmakedefine NALU_HYPRE_DEVELOP_STRING  "@NALU_HYPRE_DEVELOP_STRING@"
#cmakedefine NALU_HYPRE_DEVELOP_NUMBER   @NALU_HYPRE_DEVELOP_NUMBER@
#cmakedefine NALU_HYPRE_DEVELOP_BRANCH  "@NALU_HYPRE_DEVELOP_BRANCH@"
#cmakedefine NALU_HYPRE_BRANCH_NAME     "@NALU_HYPRE_BRANCH_NAME@"

/* Use long long int for NALU_HYPRE_BigInt */
#cmakedefine NALU_HYPRE_MIXEDINT 1

/* Use long long int for NALU_HYPRE_BigInt and NALU_HYPRE_Int*/
#cmakedefine NALU_HYPRE_BIGINT 1

/* Use single precision values for NALU_HYPRE_Real */
#cmakedefine NALU_HYPRE_SINGLE 1

/* Use quad precision values for NALU_HYPRE_Real */
#cmakedefine NALU_HYPRE_LONG_DOUBLE 1

/* Use complex values */
#cmakedefine NALU_HYPRE_COMPLEX 1

/* Use cudaMallocAsync */
#cmakedefine NALU_HYPRE_USING_DEVICE_MALLOC_ASYNC 1

/* Use GPU-aware MPI */
#cmakedefine NALU_HYPRE_WITH_GPU_AWARE_MPI 1

/* Debug mode */
#cmakedefine NALU_HYPRE_DEBUG 1

/* Define to be the max dimension size (must be at least 3) */
#define NALU_HYPRE_MAXDIM 3

/* Use persistent communication */
#cmakedefine NALU_HYPRE_USING_PERSISTENT_COMM 1

/* Use hopscotch hashing */
#cmakedefine NALU_HYPRE_HOPSCOTCH 1

/* Compile without MPI */
#cmakedefine NALU_HYPRE_SEQUENTIAL 1

/* Use HYPRE timing routines */
#cmakedefine NALU_HYPRE_TIMING 1

/* Use internal BLAS library */
#cmakedefine NALU_HYPRE_USING_NALU_HYPRE_BLAS 1

/* Use internal LAPACK library */
#cmakedefine NALU_HYPRE_USING_NALU_HYPRE_LAPACK 1

/* Print HYPRE errors */
#cmakedefine NALU_HYPRE_PRINT_ERRORS 1

/* Use OpenMP */
#cmakedefine NALU_HYPRE_USING_OPENMP 1

/* Use Caliper instrumentation */
#cmakedefine NALU_HYPRE_USING_CALIPER 1

/* Use UMPIRE */
#cmakedefine NALU_HYPRE_USING_UMPIRE 1

/* Use UMPIRE for device memory */
#cmakedefine NALU_HYPRE_USING_UMPIRE_DEVICE 1

/* Use UMPIRE for host memory */
#cmakedefine NALU_HYPRE_USING_UMPIRE_HOST 1

/* Use UMPIRE for pinned memory */
#cmakedefine NALU_HYPRE_USING_UMPIRE_PINNED 1

/* Use UMPIRE for unified memory */
#cmakedefine NALU_HYPRE_USING_UMPIRE_UM 1

/* Use if executing on device with CUDA */
#cmakedefine NALU_HYPRE_USING_CUDA 1

/* Use if executing on device with SYCL */
#cmakedefine NALU_HYPRE_USING_SYCL 1

/* Use cuBLAS */
#cmakedefine NALU_HYPRE_USING_CUBLAS 1

/* Use CUDA streams */
#cmakedefine NALU_HYPRE_USING_CUDA_STREAMS 1

/* Use cuRAND */
#cmakedefine NALU_HYPRE_USING_CURAND 1

/* Use cuSPARSE */
#cmakedefine NALU_HYPRE_USING_CUSPARSE 1

/* Use cuSOLVER */
#cmakedefine NALU_HYPRE_USING_CUSOLVER 1

/* Use device memory pool */
#cmakedefine NALU_HYPRE_USING_DEVICE_POOL 1

/* Use unified memory */
#cmakedefine NALU_HYPRE_USING_UNIFIED_MEMORY 1

/* Use device memory without UM */
#cmakedefine NALU_HYPRE_USING_DEVICE_MEMORY 1

/* Use if executing on device with OpenMP */
#cmakedefine NALU_HYPRE_USING_DEVICE_OPENMP 1

/* Use if executing on GPU device */
#cmakedefine NALU_HYPRE_USING_GPU 1

/* Use HIP */
#cmakedefine NALU_HYPRE_USING_HIP 1

/* Use NVTX */
#cmakedefine NALU_HYPRE_USING_NVTX 1

/* Use oneMLK spasre */
#cmakedefine NALU_HYPRE_USING_ONEMKLSPARSE 1

/* Use oneMLK blas */
#cmakedefine NALU_HYPRE_USING_ONEMKLBLAS 1

/* Use oneMLK rand */
#cmakedefine NALU_HYPRE_USING_ONEMKLRAND 1

/* Use SuperLU_Dist */
#cmakedefine NALU_HYPRE_USING_DSUPERLU 1

/* Use SuperLU */
#cmakedefine HAVE_SUPERLU 1

/* Use MPI */
#cmakedefine NALU_HYPRE_HAVE_MPI 1

/* #undef NALU_HYPRE_HAVE_MPI_COMM_F2C */

/* Define as follows to set the Fortran name mangling scheme:
 * 0 = unspecified
 * 1 = no underscores
 * 2 = one underscore
 * 3 = two underscores
 * 4 = caps, no underscores
 * 5 = one underscore before and after */
#define NALU_HYPRE_FMANGLE 0

/* Define as in NALU_HYPRE_FMANGLE to set the BLAS name mangling scheme */
#define NALU_HYPRE_FMANGLE_BLAS 0

/* Define as in NALU_HYPRE_FMANGLE to set the LAPACK name mangling scheme */
#define NALU_HYPRE_FMANGLE_LAPACK 0

/* Define to a macro mangling the given C identifier (in lower and upper
 * case), which must not contain underscores, for linking with Fortran. */
#define NALU_HYPRE_F77_FUNC(name,NAME) name ## _

/* As F77_FUNC, but for C identifiers containing underscores. */
#define NALU_HYPRE_F77_FUNC_(name,NAME) name ## __

/* Define to 1 if using host memory only */
#cmakedefine NALU_HYPRE_USING_HOST_MEMORY 1
